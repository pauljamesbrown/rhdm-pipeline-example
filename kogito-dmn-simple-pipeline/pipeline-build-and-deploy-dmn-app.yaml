apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  creationTimestamp: '2021-12-01T14:19:20Z'
  generation: 36
  name: dmn-simple-pipeline
  namespace: dmn-simple
  resourceVersion: '3159509'
  selfLink: /apis/tekton.dev/v1beta1/namespaces/dmn-simple/pipelines/new-pipeline
  uid: b920e58a-1307-4263-af7e-67fef3ab26e7
spec:
  params:
    - default: simple-dmn-rule
      description: The application deployment name
      name: APP_NAME
      type: string
    - default: 'https://github.com/pauljamesbrown/rhdm-pipeline-example.git'
      description: The application git repository url
      name: SOURCE_GIT_URL
      type: string
    - default: kogito-dmn-simple-rule
      description: The subdirectory in the git repository
      name: SOURCE_GIT_CONTEXT_DIR
      type: string
    - default: main
      description: The application git repository revision
      name: SOURCE_GIT_REVISION
      type: string
    - default: >-
        http://<UPDATE>/repository/maven-public/
      description: Maven mirror for Maven Builds
      name: MAVEN_MIRROR_URL
      type: string
    - default: dmn-simple
      description: Namespace where the buildconfig is located
      name: NAMESPACE_DEV
      type: string
    - default: 'https://github.com/pauljamesbrown/rhdm-pipeline-example.git'
      description: The kustomize git repository url
      name: KUSTOMIZE_GIT_URL
      type: string
    - default: main
      description: The kustomize git repository revision
      name: KUSTOMIZE_GIT_REVISION
      type: string
    - default: kogito-dmn-simple-kustomize/kogito-dmn-simple
      description: The subdirectory in the kustomize git repository
      name: KUSTOMIZE_GIT_CONTEXT_DIR
      type: string
    - default: overlays/development/deployment-patches.yaml
      description: The YAML file in which to patch the image
      name: KUSTOMIZE_GIT_FILE_NAME
      type: string
    - default: 'image-registry.openshift-image-registry.svc:5000'
      description: External URL for the container registry to set the production image from
      name: IMAGE_REGISTRY_URL
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.SOURCE_GIT_URL)
        - name: revision
          value: $(params.SOURCE_GIT_REVISION)
        - name: deleteExisting
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:afc5d3f9efe26c7042635d43b8ffd09d67936e3d0b6b901dc08a33e20313d361
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: app-source
    - name: generate-tag
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: generate-tag
    - name: maven-build
      params:
        - name: MAVEN_IMAGE
          value: 'registry.access.redhat.com/ubi8/openjdk-11:1.3'
        - name: CONTEXT_DIR
          value: ./$(params.SOURCE_GIT_CONTEXT_DIR)
        - name: GOALS
          value:
            - '-DskipTests'
            - clean
            - compile
            - package
        - name: MAVEN_MIRROR_URL
          value: $(params.MAVEN_MIRROR_URL)
      runAfter:
        - generate-tag
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: source
          workspace: app-source
        - name: maven-settings
          workspace: maven-settings
    - name: build-image
      params:
        - name: FROM_FILE
          value: >-
            ./source/$(params.SOURCE_GIT_CONTEXT_DIR)/target/$(params.APP_NAME)-1.0-SNAPSHOT-runner.jar
        - name: NAMESPACE
          value: $(params.NAMESPACE_DEV)
        - name: BUILDCONFIG
          value: $(params.APP_NAME)
      runAfter:
        - maven-build
      taskRef:
        kind: Task
        name: s2i-binary
      workspaces:
        - name: source
          workspace: app-source
    - name: tag-image-for-development
      params:
        - name: ARGS
          value:
            - tag
            - '$(params.NAMESPACE_DEV)/$(params.APP_NAME):latest'
            - >-
              $(params.NAMESPACE_DEV)/$(params.APP_NAME):dev-$(tasks.generate-tag.results.image-tag)
      runAfter:
        - build-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: set-image-in-dev
      params:
        - name: ARGS
          value:
            - set
            - image
            - deployment
            - $(params.APP_NAME)
            - >-
              $(params.APP_NAME)=image-registry.openshift-image-registry.svc:5000/$(params.NAMESPACE_DEV)/$(params.APP_NAME):dev-$(tasks.generate-tag.results.image-tag)
            - '-n $(params.NAMESPACE_DEV)'
      runAfter:
        - tag-image-for-development
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: update-kustomize-repo
      params:
        - name: gitRepositoryUrl
          value: $(params.KUSTOMIZE_GIT_URL)
        - name: gitRepositoryRevision
          value: $(params.KUSTOMIZE_GIT_REVISION)
        - name: gitPath
          value: $(params.KUSTOMIZE_GIT_CONTEXT_DIR)
        - name: fileName
          value: $(params.KUSTOMIZE_GIT_FILE_NAME)
        - name: image
          value: >-
            $(params.IMAGE_REGISTRY_URL)/$(params.NAMESPACE_DEV)/$(params.APP_NAME)
        - name: imageTag
          value: dev-$(tasks.generate-tag.results.image-tag)
        - name: verbose
          value: 'true'
      runAfter:
        - set-image-in-dev
      taskRef:
        kind: Task
        name: update-kustomize-repo
  workspaces:
    - name: app-source
    - name: maven-settings
